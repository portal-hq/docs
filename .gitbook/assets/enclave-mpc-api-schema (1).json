{
  "openapi": "3.0.0",
  "info": {
    "title": "MPC Client API",
    "version": "1.0.0",
    "description": "API for managing MPC shares, signing transactions, backup, and recovery."
  },
  "servers": [
    {
      "url": "https://mpc-client.portalhq.io"
    }
  ],
  "paths": {
    "/v1/generate": {
      "post": {
        "summary": "Generates MPC shares for both SECP256K1 (EVM, etc) and ED25519 (Solana, XRP, etc) curves.",
        "operationId": "generateMpcShare",
        "tags": [
          "Generate"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer token for authorization with either the `clientApiKey` or `clientSessionToken`."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Empty JSON object",
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with MPC shares generated for both SECP256K1 (EVM, etc) and ED25519 (Solana, XRP, etc) curves.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "secp256k1": {
                      "type": "object",
                      "properties": {
                        "share": {
                          "type": "string",
                          "description": "A stringified JSON blob representing the signing share.",
                          "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
                        },
                        "id": {
                          "type": "string",
                          "description": "A unique id for the signing share.",
                          "example": "clu32l6c80083uvz52jokyo3r"
                        }
                      }
                    },
                    "ed25519": {
                      "type": "object",
                      "properties": {
                        "share": {
                          "type": "string",
                          "description": "A stringified JSON blob representing the signing share.",
                          "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
                        },
                        "id": {
                          "type": "string",
                          "description": "A unique id for the signing share.",
                          "example": "clu32l9310087uvz5u5v9k1ao"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": "211"
                        },
                        "prefix": {
                          "type": "string",
                          "example": ""
                        },
                        "error": {
                          "type": "string",
                          "example": "SIGNING_NETWORK_ERROR"
                        },
                        "message": {
                          "type": "string",
                          "example": "There was an error connecting to the network to complete signing."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": "117"
                        },
                        "prefix": {
                          "type": "string",
                          "example": ""
                        },
                        "error": {
                          "type": "string",
                          "example": "SIGNING_PROCESS_ERROR"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unable to complete signing due to missing or corrupted signing share."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets/send": {
      "post": {
        "summary": "Send assets on various chains",
        "operationId": "sendAssets",
        "tags": [
          "Assets"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer token for authorization with either the `clientApiKey` or `clientSessionToken`."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "share": {
                    "type": "string",
                    "description": "The MPC share stored from running generate."
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., 'ethereum', 'sepolia', 'solana', 'solana-devnet', or CAIP-2 chain IDs like 'eip155:11155111')."
                  },
                  "to": {
                    "type": "string",
                    "description": "The recipient's address."
                  },
                  "token": {
                    "type": "string",
                    "description": "The token contract address (for ERC20 tokens on EVM chains) or mint address (for Solana). You can also use 'USDC' or 'USDT' for the respective tokens."
                  },
                  "amount": {
                    "type": "string",
                    "description": "The amount of tokens to send."
                  },
                  "rpcUrl": {
                    "type": "string",
                    "description": "The node provider RPC URL. Not required for Solana or Solana-Devnet."
                  },
                  "metadataStr": {
                    "type": "string",
                    "description": "Optional metadata string for the transaction."
                  }
                },
                "required": [
                  "share",
                  "chain",
                  "to",
                  "token",
                  "amount"
                ]
              },
              "examples": {
                "eip155": {
                  "summary": "EIP-155 (Ethereum) request",
                  "value": {
                    "share": "share",
                    "rpcUrl": "https://sepolia.infura.io/v3/apiKey",
                    "chain": "sepolia",
                    "to": "0xdFd8302f44727A6348F702fF7B594f127dE3A902",
                    "token": "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",
                    "amount": "0.01"
                  }
                },
                "solana": {
                  "summary": "Solana request",
                  "value": {
                    "share": "{{ _.emm.shares.ED25519.share }}",
                    "chain": "solana-devnet",
                    "to": "8APEEA4SHrfGteABQcUmH2yEHy7nEe8DqgvmKGAStHR",
                    "token": "Gh9ZwEmdLJ8DscKNTkTqPbNwLNNBjuSzaG9Vp2KGtKJr",
                    "amount": "0.001"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful asset transfer",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EIP155SendResponse"
                    },
                    {
                      "$ref": "#/components/schemas/SolanaSendResponse"
                    }
                  ]
                },
                "examples": {
                  "eip155": {
                    "summary": "EIP-155 (Ethereum) response",
                    "value": {
                      "transactionHash": "0x02073df9ba08895d681f80ae45440ba57e766602c97ee6321df5ac81bca900cc",
                      "metadata": {
                        "formattedAmount": "0.01",
                        "rawAmount": "10000000000000000",
                        "tokenAddress": "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",
                        "tokenDecimals": 18
                      }
                    }
                  },
                  "solana": {
                    "summary": "Solana response",
                    "value": {
                      "transactionHash": "5Ge5aw9WxH6MeEeE8acqtF7QhL31iZqmZiTjSks3GW6StuUkPNdHmNWP3zAqVW9trMTtfELomSiau4dDf1XtKy7K",
                      "metadata": {
                        "amount": "0.001",
                        "lastValidBlockHeight": "302651802",
                        "mintAddress": "Gh9ZwEmdLJ8DscKNTkTqPbNwLNNBjuSzaG9Vp2KGtKJr",
                        "unsignedTransaction": {
                          "message": {
                            "accountKeys": [
                              "8pb5w7NTiYnwdeGu4RBB6SXrCNTL1D8nkBjEFNST4KDz",
                              "2cFuhWNP3s4CX89UoYkVp8RNiGzJJh5e34KVzwVAnW1t",
                              "83uU2uDsptCK7aufsPepu9y3QHQdLSjVQ6cpwtB8auh4",
                              "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
                            ],
                            "header": {
                              "numReadonlySignedAccounts": 0,
                              "numReadonlyUnsignedAccounts": 1,
                              "numRequiredSignatures": 1
                            },
                            "instructions": [
                              {
                                "accounts": [
                                  1,
                                  2,
                                  0
                                ],
                                "data": "3tGNFMqHiozw",
                                "programIdIndex": 3
                              }
                            ],
                            "recentBlockhash": "BHJYSdtAFu56NN549h5HFNKhT2LFuBV81udMNJtp7uVk"
                          },
                          "signatures": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/v1/sign": {
      "post": {
        "summary": "Sign a transaction or message for any EVM chain or Solana",
        "operationId": "signTransaction",
        "tags": [
          "Sign"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            },
            "description": "Bearer token for authorization with either the `clientApiKey` or `clientSessionToken`."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "example": "eth_signTransaction",
                    "description": "The signer RPC method, for example `personal_sign` or `eth_signTransaction` or `sol_signTransaction`."
                  },
                  "params": {
                    "type": "string",
                    "example": "[\"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\"0x76c0\",\"0x9184e72a000\",\"0x9184e72a\",\"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"]",
                    "description": "A stringified array of the parameters for the RPC method."
                  },
                  "rpcUrl": {
                    "type": "string",
                    "example": "https://eth-sepolia.g.alchemy.com/v2/your-api-key",
                    "description": "The node provider RPC URLs, such as Alchemy or Infura."
                  },
                  "chainId": {
                    "type": "string",
                    "example": "eip155:11155111",
                    "description": "CAIP-2 chain ID. (i.e. eip155:1 for Ethereum Mainnet, eip155:11155111 for Ethereum Sepolia, solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp for Solana Mainnet)"
                  },
                  "share": {
                    "type": "string",
                    "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5",
                    "description": "The MPC share stored from running generate. Select either ED25519.share or SECP2561K1.share from the generate response."
                  }
                },
                "required": [
                  "method",
                  "params",
                  "rpcUrl",
                  "chainId",
                  "share"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signing operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The response from the signing request. If the request is expected to submit to a chain this is the transaction hash, else its the raw signature.",
                      "example": "0xf7a6a07fa599db56fca50fa1202670b59054e7ed452ea57b3f5b43148b8bdb165beb3a4b0fd532162a1f0fd475de1a9ecd07c95186f7a0856ce1bffa45e3acc91b"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/raw/sign/:curve": {
      "post": {
        "summary": "Sign a raw message for curves SECP256K1 (EVM, etc) or ED25519 (Solana, XRP, etc)",
        "operationId": "signRaw",
        "tags": [
          "SignRaw"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "example": ""
            },
            "description": "Bearer token for authorization with either the `clientApiKey` or `clientSessionToken`."
          },
          {
            "in": "path",
            "name": "curve",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SECP256K1"
            },
            "description": "The curve to sign the message with. Either `SECP256K1` or `ED25519`."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "param": {
                    "type": "string",
                    "example": "7369676e2074686973",
                    "description": "A hex string of the digest to sign without the leading 0x. The above example is the hex string for 'sign this'."
                  },
                  "share": {
                    "type": "string",
                    "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5",
                    "description": "The MPC share stored from running generate. Select either ED25519.share or SECP2561K1.share from the generate response."
                  }
                },
                "required": [
                  "param",
                  "share"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signing operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The response from the signing request. This is the raw signature.",
                      "example": "0xf7a6a07fa599db56fca50fa1202670b59054e7ed452ea57b3f5b43148b8bdb165beb3a4b0fd532162a1f0fd475de1a9ecd07c95186f7a0856ce1bffa45e3acc901"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/backup": {
      "post": {
        "summary": "Create Backup Shares",
        "operationId": "createBackupShare",
        "tags": [
          "Backup"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer token for authorization with either the `clientApiKey` or `clientSessionToken`."
          }
        ],
        "requestBody": {
          "description": "Create a backup share",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Backup created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/recover": {
      "post": {
        "summary": "Recover account using signing",
        "operationId": "recoverSigning",
        "tags": [
          "Recover"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer token for authorization with either the `clientApiKey` or `clientSessionToken`."
          }
        ],
        "requestBody": {
          "description": "Request body for recovering signing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully recovered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecoverResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "CLIENT-API-KEY"
      }
    },
    "schemas": {
      "EIP155SendResponse": {
        "type": "object",
        "properties": {
          "transactionHash": {
            "type": "string",
            "description": "The transaction hash of the completed transfer.",
            "example": "0x02073df9ba08895d681f80ae45440ba57e766602c97ee6321df5ac81bca900cc"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "formattedAmount": {
                "type": "string",
                "description": "The transferred amount in a human-readable format.",
                "example": "0.01"
              },
              "rawAmount": {
                "type": "string",
                "description": "The raw amount transferred in wei.",
                "example": "10000000000000000"
              },
              "tokenAddress": {
                "type": "string",
                "description": "The address of the transferred token.",
                "example": "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14"
              },
              "tokenDecimals": {
                "type": "integer",
                "description": "The number of decimal places for the token.",
                "example": 18
              }
            }
          }
        }
      },
      "SolanaSendResponse": {
        "type": "object",
        "properties": {
          "transactionHash": {
            "type": "string",
            "description": "The transaction signature of the completed transfer.",
            "example": "5Ge5aw9WxH6MeEeE8acqtF7QhL31iZqmZiTjSks3GW6StuUkPNdHmNWP3zAqVW9trMTtfELomSiau4dDf1XtKy7K"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "description": "The transferred amount.",
                "example": "0.001"
              },
              "lastValidBlockHeight": {
                "type": "string",
                "description": "The last valid block height for this transaction.",
                "example": "302651802"
              },
              "mintAddress": {
                "type": "string",
                "description": "The mint address of the transferred token.",
                "example": "Gh9ZwEmdLJ8DscKNTkTqPbNwLNNBjuSzaG9Vp2KGtKJr"
              },
              "unsignedTransaction": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "object",
                    "properties": {
                      "accountKeys": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Array of account public keys involved in the transaction.",
                        "example": [
                          "8pb5w7NTiYnwdeGu4RBB6SXrCNTL1D8nkBjEFNST4KDz",
                          "2cFuhWNP3s4CX89UoYkVp8RNiGzJJh5e34KVzwVAnW1t",
                          "83uU2uDsptCK7aufsPepu9y3QHQdLSjVQ6cpwtB8auh4",
                          "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
                        ]
                      },
                      "header": {
                        "type": "object",
                        "properties": {
                          "numReadonlySignedAccounts": {
                            "type": "integer",
                            "example": 0
                          },
                          "numReadonlyUnsignedAccounts": {
                            "type": "integer",
                            "example": 1
                          },
                          "numRequiredSignatures": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      },
                      "instructions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "example": [
                                1,
                                2,
                                0
                              ]
                            },
                            "data": {
                              "type": "string",
                              "example": "3tGNFMqHiozw"
                            },
                            "programIdIndex": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      },
                      "recentBlockhash": {
                        "type": "string",
                        "example": "BHJYSdtAFu56NN549h5HFNKhT2LFuBV81udMNJtp7uVk"
                      }
                    }
                  },
                  "signatures": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "example": null
                  }
                }
              }
            }
          }
        }
      },
      "BackupRequest": {
        "type": "object",
        "properties": {
          "generateResponse": {
            "type": "string",
            "description": "A stringified JSON blob representing the signing share.",
            "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
          }
        },
        "required": [
          "generateResponse"
        ]
      },
      "BackupResponse": {
        "type": "object",
        "properties": {
          "secp256k1": {
            "type": "object",
            "properties": {
              "share": {
                "type": "string",
                "description": "A stringified JSON blob representing the SECP256K1 backup share.",
                "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
              },
              "id": {
                "type": "string",
                "description": "A unique id for the backup share.",
                "example": "clu32l6c80083uvz52jokyo3r"
              }
            }
          },
          "ed25519": {
            "type": "object",
            "properties": {
              "share": {
                "type": "string",
                "description": "A stringified JSON blob representing the ED25519 backup share.",
                "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
              },
              "id": {
                "type": "string",
                "description": "A unique id for the backupp share.",
                "example": "clu32l9310087uvz5u5v9k1ao"
              }
            }
          }
        }
      },
      "RecoverRequest": {
        "type": "object",
        "properties": {
          "backupResponse": {
            "type": "string",
            "description": "The stringified response from the backup endpoint.",
            "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
          }
        },
        "required": [
          "backupResponse"
        ]
      },
      "RecoverResponse": {
        "type": "object",
        "properties": {
          "secp256k1": {
            "type": "object",
            "properties": {
              "share": {
                "type": "string",
                "description": "A stringified JSON blob representing the SECP256K1 signing share.",
                "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
              },
              "id": {
                "type": "string",
                "description": "A unique id for the signing share.",
                "example": "clu32l9310087uvz5u5v9k1ao"
              }
            }
          },
          "ed25519": {
            "type": "object",
            "properties": {
              "share": {
                "type": "string",
                "description": "A stringified JSON blob representing the ED25519 signing share.",
                "example": "eyJjbGllbnRJZCI6IiIsImJhY2t1cFNoYXJlUGFpcklkIjoiIiwic2lnbmluZ1NoYXJlUGFpcklkIjoiY2x2bzFrdWtwMGNwbnM2MTV1dDIyNjYycCIsInNoYXJlIjoiMzQyNjIxMDk5NDc0MDY3MzY0Nzc4NDkzNDk1MTY5NjY4ODAwMTQ1NDE0NjE4MTAzNDk3NDQ1NTY4NTM5NjkwMTczNzQ2NDUzMTI2OSIsInNzaWQiOiI1SjdmNlBiNS9BSmJ0bUViRDRmVzUwYkxWRmpzNDVEZzNwbS9xOC9JRCtFPSIsInB1YmtleSI6eyJYIjoiNDMzMjU0MTMxNTEyNTYyODkzODU0NjU2MDE3MzkzNjk2ODk2NDE5ODYyMjcyMDE1NzkyMDU3NTYxNDc1OTEwNTMyMDk2MjkzNDQ5MTQiLCJZIjoiOTc5NDczNzIwNDU4MDAzNDMxODU5ODQwMTAzNDgzOTAwNDk3NzE5NjgyNDA4NjkxOTgwMzY3OTYyNzYzMDA3NTc5MzAxNDQyNjI3NCJ9LCJwYXJ0aWFsUHVia2V5Ijp7ImNsaWVudCI6eyJYIjoiNDQ1NTk2NjI1OTYyNDk4NDg4MDgwNjY2Mjk5MTE2NTg5ODgzMzYxMTk1NzEyMDE1NTQ0OTA5NDcwMjMwODA1ODkxNzg1NzY3MzUzNzkiLCJZIjoiNTI0NTk2MzU4NDg4ODMxOTU1NTI3ODg5OTQxNTI5OTQwNDg5MDM3OTM4MTQ0OTM0NDY1MDM1NTQ3MzA1NjU1MTI5NjU5NTkxMDIxMjAifSwic2VydmVyIjp7IlgiOiIxNjQzODgyNDk4MTIzMjUyNzQzNTk3OTU0NjA4Njc3MzAyMjkwMTE5NjY4Mzc3MzA2NzU3NzE5MTY0NDcyNDY5MTQwNjQzNjE3NzkzNSIsIlkiOiI1NzU0Mjg4NzU4MDAxMjUyNDMyODgxNzEwMjQwNDcwMzQxMzE4Mjg3NDIyMDE3MjUwMDU3MDc4MzIwMzk0MTM5..."
              },
              "id": {
                "type": "string",
                "description": "A unique id for the signing share.",
                "example": "clu32l9310087uvz5u5v9k1ao"
              }
            }
          }
        }
      }
    }
  }
}
